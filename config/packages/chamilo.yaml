services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AdminBundle\:
        resource: '../../src/AdminBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AdminBundle/{ChamiloAdminBundle.php,Entity,Repository,Tests}'

    ClassificationBundle\:
        resource: '../../src/ClassificationBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/ClassificationBundle/{ChamiloClassificationBundle.php,Entity,Admin,Document,Repository,Tests}'

    ContactBundle\:
        resource: '../../src/ContactBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/ContactBundle/{ChamiloContactBundle.php,Entity,Admin,Controller,DependencyInjection,Form,Repository,Tests}'

    Chamilo\CoreBundle\:
        resource: '../../src/CoreBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/CoreBundle/{Admin,Block,Component,Composer,DependencyInjection,EventListener,Form,Framework,Menu,Migrations,Security,Settings,Twig,Controller,ChamiloCoreBundle.php,Entity,Repository,Tests}'

    Chamilo\CoreBundle\Controller\:
        resource: '../../src/CoreBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    Chamilo\UserBundle\:
        resource: '../../src/UserBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/UserBundle/{Admin,Block,Component,Composer,DependencyInjection,EventListener,Form,Framework,Menu,Migrations,Security,Settings,Twig,Controller,ChamiloUserBundle.php,Entity,Repository,Tests}'


    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
#    CoreBundle\Controller\:
#        resource: '../../src/CoreBundle/Controller'
#        public: true
#        tags: ['controller.service_arguments']

fos_user:
    db_driver: orm # can be orm or odm
    firewall_name:  secured_area

    # if you change the class configuration, please also alter the sonata_user.yml file
    user_class: Chamilo\UserBundle\Entity\User

    group:
        group_class:   Chamilo\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager

    service:
        user_manager: sonata.user.orm.user_manager

    from_email:
        address: 'test@example.com'
        sender_name: 'test@example.com'

#fos_comment:
#    db_driver: orm
#    class:
#        model:
#            comment: Application\Sonata\CommentBundle\Entity\Comment
#            thread: Application\Sonata\CommentBundle\Entity\Thread
#    form:
#        comment:
#            type: sonata_comment_comment
lunetics_locale:
    guessing_order:
        - session
        - query
        - router

        #- browser

    allowed_locales: '%locales%'

imports:
    - { resource: ../../src/CoreBundle/Resources/config/services.yml }
    - { resource: ../../app/config/sonata/sonata_admin.yml }
    - { resource: ../../app/config/sonata/sonata_user.yml }
    - { resource: ../../app/config/sonata/sonata_block.yml }
    - { resource: ../../app/config/sonata/sonata_timeline.yml }
    - { resource: ../../app/config/sonata/sonata_media.yml }
    - { resource: ../../app/config/sonata/sonata_page.yml }
    - { resource: ../../app/config/sonata/sonata_formatter.yml }
    - { resource: ../../app/config/sonata/sonata_block.yml }